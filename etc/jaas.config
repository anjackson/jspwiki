// This file contains the JAAS login configuration for JSPWiki.
// It provides the rules that govern how users log into
// the application.
//
// If you are running your servlet container with a JAAS
// login configuration file already, you should simply 
// append the contents of this file to it. Otherwise, you
// can simply use this as a stand-alone configuration.
//
// You make this configuration active, you will need to specify 
// the location of this file by setting the JVM system property
// 'java.security.auth.login.config' in the command line script you
// use to start your web container. The file location should
// be the absolute path to the jspwiki.policy file. For example:
//
//   java -jar myservletcontainer.jar -Djava.security.auth.login.config==/path-to/jaas.config
// 
// Some servlet containers make this very easy by looking
// for an environment variable and automatically appending
// the contents to the 'java' command. For example, Tomcat
// users just need to set the CATALINA_OPTS variable:
// 
//   export CATALINA_OPTS="-Djava.security.auth.login.config==/path-to/jaas.config"
//
// In addition, it is typically good practice to store jaas.config
// in the Tomcat config directory (CATALINA_HOME/conf).
//

// -----------------------------------------------------------
// And now, for the Login Configurations...
//
// When a user attempts to logs in, one of the following LoginConfiguration
// policies will be consulted.
//  -JSPWiki-container
//  -JSPWiki-custom
//

// JSPWiki-container 
//
// The standard application configuration defaults to using container-managed
// security as the first potential authenticator via the JAAS 
// 'WebContainerLoginModule.' The module attempts to authenticate the user
// by sniffing a Principal object from the HttpServletRequest. If that 
/  doesn't work, the module will next try to get the 'remote user' property
// in the servlet request and use that value to look up the user in the 
// configured JSPWiki user database (which by default persists data to
// an XML file called userdatabase.xml).
//
// Successful login results in the 
//
// Note that if container-managed authentication is turned off for
// the JSPWiki application, WebContainerLoginModule will ALWAYS fail.
// By "turned off," we mean:
//  - The <security-containts> section of WEB-INF/web.xml is 
//    commented out, or
//  - The servlet container doesn't have a configured authentication
//    realm for JSPWiki
//
// If the WebContainerLoginModule fails, a 'login' is performed using
// The AnonymousLoginModule, which always succeeds; the user will possess
// only the BuiltInGroup.GUEST Principal.

JSPWiki-container {
  com.ecyrd.jspwiki.auth.login.WebContainerLoginModule SUFFICIENT;
  com.ecyrd.jspwiki.auth.login.AnonymousLoginModule    SUFFICIENT;
};

// A second application configuration is used when container-managed
// security is not used---i.e., logins are done via JSPWiki directly
// using custom authentication. In this case, the authentication
// is done using the JSPWiki user database.

JSPWiki-custom {
  com.ecyrd.jspwiki.auth.login.UserDatabaseLoginModule REQUIRED;
};
