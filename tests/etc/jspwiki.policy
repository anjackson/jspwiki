// $Id: jspwiki.policy,v 1.2 2005-07-17 08:43:58 jalkanen Exp $
//
// This file contains the Java 2 security policy for JSPWiki.
// It provides the permissions rules for the JSPWiki
// environment, and should be suitable for most 
// purposes.
//
// If you are running your servlet container with a security
// policy already, you should simply append the contents
// of this file to it. Otherwise, you can simply use this
// as a stand-alone policy, even without running a 
// security manager.
//
// You make this policy active, you will need to specify 
// the location of this file by setting the JVM system property
// 'java.security.policy' in the command line script you
// use to start your web container. The file location should
// be the absolute path to the jspwiki.policy file. For example:
//
//   java -jar myservletcontainer.jar -Djava.security.policy=/path-to/jspwiki.policy
// 
// Some servlet containers make this very easy by looking
// for an environment variable and automatically appending
// the contents to the 'java' command. For example, Tomcat
// users just need to set the CATALINA_OPTS variable:
// 
//   export CATALINA_OPTS="-Djava.security.policy=/path-to/jspwiki.policy"
//
// In addition, it is typically good practice to store jspwiki.policy
// in the Tomcat config directory (CATALINA_HOME/conf).
//

// -----------------------------------------------------------
// And now, for the security policy
//

// JSPWiki signs its own JAR files so that the Java security polcicy
// knows how to resolve our custom Wiki/PagePermissions. The keystore is here:
keystore "jspwiki.jks";

// JSPWiki itself needs some basic privileges in order to operate.
// Don't change these, because it will b0rk the system if you do.
grant signedBy "jspwiki" {
};

// Unauthenticted users are allowed to view all pages (except group
// pages. If you don't want anonymous users to be able to view pages,
// or if you need "strict logins," comment out or delete this entry.

grant signedBy "jspwiki" {
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "*", "view,comment";
};

grant signedBy "jspwiki" principal com.ecyrd.jspwiki.auth.authorize.Role "Anonymous" {
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "*", "view,comment";
    permission com.ecyrd.jspwiki.auth.permissions.WikiPermission "registerUser";
};


// This next policy is pretty loose. It allows 
// minimally-authenticated users to view and edit any page
// (including group pages), as well as create new pages, 
// comment and upload files. If you want to require authentication
// rather than trusting the users to supply their own identities,
// comment out or delete this entry. Ditto for "strict logins."

grant signedBy "jspwiki" principal com.ecyrd.jspwiki.auth.authorize.Role "Asserted" {
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "*", "edit";
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "Group*", "view";
    permission com.ecyrd.jspwiki.auth.permissions.WikiPermission "createPages";
};


// This next policy feels a bit more like real security. If
// a user has logged in, he or she can view or edit any page
// (including group pages), as well as create new pages, 
// comment and upload files.

grant signedBy "jspwiki" principal com.ecyrd.jspwiki.auth.authorize.Role "Authenticated" {
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "*", "edit,rename";
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "Group*", "view";
    permission com.ecyrd.jspwiki.auth.permissions.WikiPermission "createPages,createGroups";
};


// Administrators also are allowed to delete any page, and can edit/delete groups.

grant signedBy "jspwiki" principal com.ecyrd.jspwiki.auth.authorize.Role "Admin" {
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "*", "rename,delete";
    permission com.ecyrd.jspwiki.auth.permissions.PagePermission "Group*", "rename,delete";
    permission com.ecyrd.jspwiki.auth.permissions.WikiPermission "createPages,createGroups";
};
